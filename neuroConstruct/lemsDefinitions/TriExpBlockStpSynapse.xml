<Lems>

  <Include file="NeuroMLCoreDimensions.xml"/>
  <Include file="Synapses.xml"/>

  <ComponentType name="RothmanBlock"
    extends="baseBlock"
    description="Synaptic blockage model used for the NMDA-mediated synapse in Schwartz2012.">
    <Text name="species"/>

    <Requirement name="v" dimension="voltage"/>

    <Constant name="faradayConstant" dimension="charge_per_mole" value="96485.3365 C_per_mol"/>
    <Constant name="idealGasConstant" dimension="idealGasConstantDims" value="8.3144621 J_per_K_per_mol"/>

    <Parameter name="z" dimension="none"/>
    <Parameter name="T" dimension="temperature"/>
    <Parameter name="blockConcentration" dimension="concentration"/>
    <Parameter name="deltaBind" dimension="none"/>
    <Parameter name="deltaPerm" dimension="none"/>
    <Parameter name="C1" dimension="concentration"/>
    <Parameter name="C2" dimension="concentration"/>

    <Dynamics>
      <DerivedVariable name="theta" dimension="per_voltage" value="(z * faradayConstant) / (idealGasConstant * T)"/>
      <DerivedVariable name="scaling" dimension="none" exposure="scaling" value="(C1 * exp(deltaBind * theta * v) + C2 * exp(-deltaPerm * theta * v)) / (C1 * exp(deltaBind * theta * v) + C2 * exp(-deltaPerm * theta * v) + blockConcentration * exp(deltaBind * theta * v))"/>
    </Dynamics>
  </ComponentType>


    <ComponentType name="TriExpBlockStpSynapse"
       extends="baseSynapse"
       description="Blocking synapse with short term plasticity and triexponential basic waveform (one rise time, two decay times).">
      <Parameter name="erev" dimension="voltage" description="Reversal potential of the synapse"/>
      <Exposure name="g" dimension="conductance" description="Time varying conductance through the synapse"/>
      <Child name="stpMechanism" type="tsodyksMarkramDepFacMechanism"/>
      <Child name="RothmanBlock" type="RothmanBlock"/>

      <EventPort name="relay" direction="out" description="Used to relay incoming spikes to child plasticity mechanism"/>

      <!-- DIRECT -->
      <!-- waveform shape parameters -->
      <Parameter name="directAmp1" dimension="conductance"/>
      <Parameter name="directAmp2" dimension="conductance"/>
      <Parameter name="directTauRise" dimension="time"/>
      <Parameter name="directTauDecay1" dimension="time"/>
      <Parameter name="directTauDecay2" dimension="time"/>

      <Dynamics>
	<DerivedVariable name="block" dimension="none" select="RothmanBlock/scaling" />
	<DerivedVariable name="g" dimension="conductance" exposure="g" value="block * (directAmp1 * (directB1 - directA1) + directAmp2 * (directB2 - directA2))" />
	<DerivedVariable name="i" exposure="i" dimension="current" value="g * (erev - v)" />

	<!-- DIRECT -->
	<StateVariable name="directA1" dimension="none"/>
	<StateVariable name="directA2" dimension="none"/>
	<StateVariable name="directB1" dimension="none"/>
	<StateVariable name="directB2" dimension="none"/>

	<DerivedVariable name="directPeakTime1" dimension="time" value="(directTauRise * directTauDecay1)/(directTauDecay1 - directTauRise) * ln(directTauDecay1 / directTauRise)" />
	<DerivedVariable name="directPeakTime2" dimension="time" value="(directTauRise * directTauDecay2)/(directTauDecay2 - directTauRise) * ln(directTauDecay2 / directTauRise)" />
	<DerivedVariable name="directFactor1" dimension="none" value="1 / (-exp(-directPeakTime1 / directTauRise) + exp(-directPeakTime1 / directTauDecay1))" />
	<DerivedVariable name="directFactor2" dimension="none" value="1 / (-exp(-directPeakTime2 / directTauRise) + exp(-directPeakTime2 / directTauDecay2))" />

	<TimeDerivative variable="directA1" value="-directA1 / directTauRise" />
	<TimeDerivative variable="directA2" value="-directA2 / directTauRise" />
	<TimeDerivative variable="directB1" value="-directB1 / directTauDecay1" />
	<TimeDerivative variable="directB2" value="-directB2 / directTauDecay2" />

	<DerivedVariable name="directPlasticityFactor" dimension="none" select="stpMechanism/plasticityFactor" />

	<OnStart>
	  <!-- DIRECT -->
	  <StateAssignment variable="directA1" value="0" />
	  <StateAssignment variable="directA2" value="0" />
	  <StateAssignment variable="directB1" value="0" />
	  <StateAssignment variable="directB2" value="0" />
	</OnStart>

	<OnEvent port="in">
	  <!-- DIRECT -->
	  <StateAssignment variable="directA1" value="directA1 + directPlasticityFactor * directFactor1" />
	  <StateAssignment variable="directA2" value="directA2 + directPlasticityFactor * directFactor2" />
	  <StateAssignment variable="directB1" value="directB1 + directPlasticityFactor * directFactor1" />
	  <StateAssignment variable="directB2" value="directB2 + directPlasticityFactor * directFactor2" />
	  <EventOut port="relay"/>
	</OnEvent>

      </Dynamics>
    </ComponentType>

</Lems>